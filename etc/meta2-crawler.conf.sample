[meta2-crawler]
namespace = OPENIO
user = openio
# Comma separated list of volumes to watch
volume_list = /var/lib/oio/sds/vol1/NS/meta2-1/,/var/lib/oio/sds/vol1/NS/meta2-2/

# Wait random time before starting
# to avoid all the crawlers from working at the same time.
wait_random_time_before_starting = False
# In seconds, the interval between two full scans.
interval = 1800
# In seconds, the interval between two logs entries (for each volume).
report_interval = 300
# Maximum containers to be scanned per second.
scanned_per_second = 30

# Common log stuff
log_level = INFO
log_facility = LOG_LOCAL0
log_address = /dev/log
syslog_prefix = OIO,OPENIO,meta2-crawler

[pipeline:main]
pipeline = logger auto_vacuum auto_sharding

[filter:auto_sharding]
# Trigger the sharding for given container.
use = egg:oio#auto_sharding
# Size of the meta2 database from which sharding can be triggered.
sharding_db_size = 1073741824
# Strategy to use to shard thee container.
sharding_strategy = shard-with-partition
# Parameters to use for the given strategy.
## Minimum number of objects to trigger sharding.
## Notice that this number is a safeguard against concurrent sharding requests.
## Only the database size is checked by the crawler,
## this threshold is a parameter for the sharding strategy
## and won't be checked by the crawler.
sharding_threshold = 100000
## Partition to use for cutting the container.
sharding_partition = 50,50
# Maximum amount of time the sharding process is allowed to create new shard
sharding_create_shard_timeout = 60
# Maximum amount of time the sharding process is allowed to save writes
# before applying them directly to the new shards
sharding_save_writes_timeout = 60
# Time before considering that one of the sharding steps is blocked
sharding_step_timeout = 600
# Size of the meta2 database from which shrinking can be triggered
# (except for the one and last shard).
shrinking_db_size = 268435456

[filter:auto_vacuum]
# Trigger the vacuum for given container.
use = egg:oio#auto_vacuum
# Minimum waiting time after the last modification
# to be sure the container is no longer in use,
# so as not to interfere with customer requests.
min_waiting_time_after_last_modification = 30
# Trigger the vacuum when the ratio is reached
# AND the base has not been changed recently
# (cf. "min_waiting_time_after_last_modification").
soft_max_unused_pages_ratio = 0.1
# Force the vacuum to be triggered when the ratio is reached
# (ignore "min_waiting_time_after_last_modification").
hard_max_unused_pages_ratio = 0.2

[filter:logger]
# Log info for for given container.
use = egg:oio#logger
