sudo: required
dist: bionic
language: python
python:
    - "3.6"
addons:
  apt:
    sources:
    - sourceline: 'deb http://mirror2.openio.io/pub/repo/openio/sds/20.04/ubuntu/ bionic/'
      key_url: 'http://mirror2.openio.io/pub/repo/openio/APT-GPG-KEY-OPENIO-0'
# Please keep the following list sorted!
    packages:
    - apache2
    - asn1c
    - attr
    - beanstalkd
    - bison
    - curl
    - flex
    - gdb
    - lcov
    - libapache2-mod-wsgi-py3
    - libapreq2-dev
    - libattr1-dev
    - libcurl4-gnutls-dev
    - liberasurecode-dev
    - libglib2.0-dev
    - libjson-c-dev
    - libleveldb-dev
    - liblzo2-dev
    - libsqlite3-dev
    - libzmq3-dev
    - libzookeeper-mt-dev
    - python3
    - python3-coverage
    - redis-server
    - redis-tools
    - sqlite3
    - zookeeper
    - zookeeper-bin
    - zookeeperd
services:
  - zookeeper
install:
  - gimme stable
  - source ~/.gimme/envs/latest.env
  - virtualenv $HOME/oio && source $HOME/oio/bin/activate
  - pip install --upgrade pip setuptools virtualenv tox
  - pip install --upgrade -r test-requirements.txt
  - sudo bash -c "echo '/tmp/core.%p.%E' > /proc/sys/kernel/core_pattern"
  - mkdir /tmp/oio
  - git fetch --tags

env:
  global:
  - CMAKE_OPTS="-DENABLE_CODECOVERAGE=on -DCMAKE_INSTALL_PREFIX=/tmp/oio -DLD_LIBDIR=lib -DZK_LIBDIR=/usr/lib -DZK_INCDIR=/usr/include/zookeeper"
  - G_DEBUG=fatal_warnings
  - G_DEBUG_LEVEL=W
  - ZK=127.0.0.1:2181
  - LD_LIBRARY_PATH=/tmp/oio/lib
  - PKG_CONFIG_PATH=/tmp/oio/lib/pkgconfig

jobs:
  fast_finish: true
  include:
    - stage: Fail Fast tests
      script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-failfast.sh
      git:
        depth: false
      name: Copyright, Release build, SDK build
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-unit.sh
      name: C unit/func, Python 3 unit/pep8

    - stage: Functional tests (fast)
      script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=slave
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=cli
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=worm

    - stage: Functional tests
      script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=rebuilder,with-service-id,zlib
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=repli,with_tls
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=ec,with-service-id,with_tls
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=3copies,with-service-id
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=mover,with-service-id
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=single,small-cache,fsync,webhook,zlib
    - script:
        - source ~/.gimme/envs/latest.env
        - ./tools/oio-travis-suites.sh
      env: TEST_SUITE=multi-beanstalk

after_success:
  - bash <(curl -s https://codecov.io/bash) -f /tmp/cmake_coverage.output
  - codecov
  - if cat ${HOME}/go_coverage.output.* > go_coverage.output; then rm ${HOME}/go_coverage.output.*; else echo "" > go_coverage.output; fi
  - bash <(curl -s https://codecov.io/bash) -f go_coverage.output
